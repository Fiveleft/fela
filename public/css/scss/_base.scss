@import "compass";

@include global-reset();

// Colors
$color-black : #000000;
$color-white : #FFFFFF;
$color-magenta : #FF0097;
$color-dk-magenta : shade($color-magenta, 30);
$color-dk-grey : #171716; 
$color-grey : #44443E;
$color-med-grey : #91918C;
$color-lt-grey : #DFDFDA;
$color-cream : #F2F2EE;

// $color-dk-gold : #323230;
// $color-gold-90 : #44443E;
// $color-gold-80 : #575752;
// $color-gold-70 : #6B6B65;
// $color-gold-60 : #7E7E79;
// $color-gold-50 : #91918C;
// $color-gold-40 : #A5A5A0;
// $color-gold-30 : #B8B8B3;
// $color-gold-20 : #CBCBC7;
// $color-gold-10 : #DFDFDA;
// $color-lt-gold : #F2F2EE;
// $color-dk-cream : $color-gold-50;
// $color-background : $color-lt-gold;
// $color-gold : #B29600;
// $color-text-light : #F2F2EE;
// $color-text-light-hover : tint($color-text-light, 80);
// $color-text-light-active : tint($color-text-light, 20);
// $color-text-light-inactive : shade($color-text-light, 30);

// Font Families
$font-body:"adobe-garamond-pro","Garamond",serif;
$font-headline:"bebas-neue","Garamond",sans-serif;

// Font Mixins
@mixin font-bold() {
  font-family:$font-body;
  font-weight:700;
}
@mixin font-emphasis() {
  font-family: $font-body;
  font-style: italic;
  font-weight: 600;
}

// Easing
$easeInCubic    : cubic-bezier(0.550, 0.055, 0.675, 0.190);
$easeOutCubic   : cubic-bezier(0.215, 0.610, 0.355, 1.000);
$easeInOutCubic : cubic-bezier(0.645, 0.045, 0.355, 1.000);
$easeInCirc     : cubic-bezier(0.600, 0.040, 0.980, 0.335);
$easeOutCirc    : cubic-bezier(0.075, 0.820, 0.165, 1.000);
$easeInOutCirc  : cubic-bezier(0.785, 0.135, 0.150, 0.860);
$easeInExpo     : cubic-bezier(0.950, 0.050, 0.795, 0.035);
$easeOutExpo    : cubic-bezier(0.190, 1.000, 0.220, 1.000);
$easeInOutExpo  : cubic-bezier(1.000, 0.000, 0.000, 1.000);
$easeInQuad     : cubic-bezier(0.550, 0.085, 0.680, 0.530);
$easeOutQuad    : cubic-bezier(0.250, 0.460, 0.450, 0.940);
$easeInOutQuad  : cubic-bezier(0.455, 0.030, 0.515, 0.955);
$easeInQuart    : cubic-bezier(0.895, 0.030, 0.685, 0.220);
$easeOutQuart   : cubic-bezier(0.165, 0.840, 0.440, 1.000);
$easeInOutQuart : cubic-bezier(0.770, 0.000, 0.175, 1.000);
$easeInQuint    : cubic-bezier(0.755, 0.050, 0.855, 0.060);
$easeOutQuint   : cubic-bezier(0.230, 1.000, 0.320, 1.000);
$easeInOutQuint : cubic-bezier(0.860, 0.000, 0.070, 1.000);
$easeInSine     : cubic-bezier(0.470, 0.000, 0.745, 0.715);
$easeOutSine    : cubic-bezier(0.390, 0.575, 0.565, 1.000);
$easeInOutSine  : cubic-bezier(0.445, 0.050, 0.550, 0.950);
$easeInBack     : cubic-bezier(0.600, -0.280, 0.735, 0.045);
$easeOutBack    : cubic-bezier(0.175,  0.885, 0.320, 1.275);
$easeInOutBack  : cubic-bezier(0.680, -0.550, 0.265, 1.550);

	
/* Breakpoints */
$width-min:320px;
$width-mobile: 480px;
$width-tablet: 768px;
$width-small-desktop: 1024px;
$width-medium-desktop: 1170px;
$width-large-desktop: 1280px;


/* Media Queries */
//$dpi-high-resolution: "(-Webkit-min-device-pixel-ratio: 1.5), only screen and (-moz-min-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3/2), only screen and (min-device-pixel-ratio: 1.5)";
$dpi-high-resolution: "(min--moz-device-pixel-ratio: 1.3),(-o-min-device-pixel-ratio: 2.6/2),(-webkit-min-device-pixel-ratio: 1.3),(min-device-pixel-ratio: 1.3),(min-resolution: 1.3dppx)";

$size-mobile: "(max-width:"#{$width-mobile}")";
$size-mobile-min: "(max-width:"#{$width-min}")";

$size-tablet: "(min-width:"#{$width-mobile + 1px}") and (max-width:"#{$width-tablet - 1px}")";
$size-tablet-max: "(max-width:"#{$width-tablet - 1px}")";
$size-tablet-min: "(min-width:"#{$width-mobile + 1px}")";

$size-small-desktop: "(min-width:"#{$width-tablet}") and (max-width:"#{$width-small-desktop}")";
$size-small-desktop-max: "(max-width:"#{$width-small-desktop}")";
$size-small-desktop-min: "(min-width:"#{$width-tablet}")";

$size-medium-desktop: "(min-width:"#{$width-small-desktop + 1px}") and (max-width:"#{$width-medium-desktop}")";
$size-medium-desktop-max: "(max-width:"#{$width-medium-desktop}")";
$size-medium-desktop-min: "(min-width:"#{$width-small-desktop + 1px}")";

$size-large-desktop: "(min-width:"#{$width-medium-desktop + 1px}") and (max-width:"#{$width-large-desktop}")";
$size-large-desktop-max: "(max-width:"#{$width-large-desktop}")";
$size-large-desktop-min: "(min-width:"#{$width-medium-desktop + 1px}")";


@mixin breakpoint( $point ) 
{
  @if $point == large-desktop {
    @media #{$size-large-desktop} { @content; }
  }
  @else if $point == large-desktop-min {
    @media #{$size-large-desktop-min} { @content; }
  }
  @else if $point == large-desktop-max {
    @media #{$size-large-desktop-max} { @content; }
  }
  @else if $point == medium-desktop {
    @media #{$size-medium-desktop} { @content; }
  }
  @else if $point == medium-desktop-min {
    @media #{$size-medium-desktop-min} { @content; }
  }
  @else if $point == medium-desktop-max {
    @media #{$size-medium-desktop-max} { @content; }
  }
  @else if $point == small-desktop {
    @media #{$size-small-desktop} { @content; }
  }
  @else if $point == small-desktop-min {
    @media #{$size-small-desktop-min} { @content; }
  }
  @else if $point == small-desktop-max {
    @media #{$size-small-desktop-max} { @content; }
  }
  @else if $point == tablet {
    @media #{$size-tablet} { @content; }
  }
  @else if $point == tablet-min {
    @media #{$size-tablet-min} { @content; }
  }
  @else if $point == tablet-max {
    @media #{$size-tablet-max} { @content; }
  }
  @else if $point == tablet-landscape {
    @media #{$size-tablet} and (orientation:landscape) { @content; }
  }
  @else if $point == tablet-max-portrait {
    @media #{$size-tablet-max} and (orientation:portrait) { @content; }
  }
  @else if $point == tablet-max-landscape {
    @media #{$size-tablet-max} and (orientation:landscape) { @content; }
  }
  @else if $point == mobile {
    @media #{$size-mobile} { @content; }
  }
  @else if $point == mobile-landscape {
    @media #{$size-mobile} and (orientation:landscape) { @content; }
  }
  @else if $point == landscape {
    @media (orientation:landscape) { @content; }
  }
  @else {
    @media #{$point} { @content; } // Allows for a custom style
  }
}

@mixin highres-image( $image, $size:"" ) {
  @media #{$dpi-high-resolution} { 
    background-image: url($image);
    @if $size != "" {
      background-size:$size;
    }
  }
}

$icon-offset-unit: -30px;
@mixin icon-position( $x:0, $y:0 ) {
  background-position: $icon-offset-unit * $x $icon-offset-unit * $y;
}

$em-base: 16px;

// Working in ems is annoying. Think in pixels by using this handy function, emCalc(#px)
@function emCalc($pxWidth) {
  @return $pxWidth / $em-base * 1rem;
}

// Apply clearfix styles
@mixin clearfix{
  &:after { content:""; display:table; clear:both; }
}